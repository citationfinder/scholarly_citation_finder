<?xml version="1.0" encoding="UTF-8"?>
<CSXAPIMetadata>
<body>
DEEM: a Tool for the Dependability Modeling and Evaluation
of Multiple Phased Systems
A. Bondavalli1, I. Mura2, S.Chiaradonna3, R. Filippini3, S.Poli3, F. Sandrini3
1 DIS, University of Florence, Via Lombroso 6/17 I-50134 Firenze, Italy {a.bondavalli@dsi.unifi.it}
2
 Motorola Technology Center, Via P.C. Boggio 65/A,10139 Torino, Italy
{Ivan_Mura@email.mot.com}
3 CNUCE Istituto del CNR, Via Vittorio Alfieri 1,  56010 Ghezzano (Pisa) ITALY,
Abstract
Multiple-Phased Systems, whose operational life
can be partitioned in a set of disjoint periods, called
“phases”, include several classes of systems such as
Phased Mission Systems and Scheduled Maintenance
Systems. Because of their deployment in critical appli-
cations, the dependability modeling and analysis of
Multiple-Phased Systems is a task of primary rele-
vance. However, the phased behavior makes the analy-
sis of Multiple-Phased Systems extremely complex..
This paper is centered on the description and applica-
tion of DEEM, a dependability modeling and evalua-
tion tool for Multiple Phased Systems. DEEM supports
a powerful and efficient methodology for the analytical
dependability modeling and evaluation of Multiple
Phased Systems, based on Deterministic and
Stochastic Petri Nets and on Markov Regenerative
Processes.
1  Introduction
Many systems devoted to the control and management
of critical activities have to perform a series of tasks that
must be accomplished in sequence. Their operational life
consists of a sequence of non-overlapping periods, called
phases. These systems are often called Multiple-Phased
Systems (MPS). They include several classes of systems
that have been object of active research during the last
decades, such as those known as Phased Mission Systems
(PMS) and Scheduled Maintenance Systems (SMS). MPS
are very general, since their phases can be distinguished
along a wide variety of differentiating features.
(1) During a specific phase, an MPS is devoted to the exe-
cution of a particular set of tasks, which may be differ-
ent from the activities performed within other phases.
(2) The performance and dependability requirements of an
MPS can be completely different from one phase to
another.
(3) During some phases the system may be subject to a par-
ticularly stressing environment, thus experiencing dra-
matic increases in the failure rate of its components.
(4) In order to accomplish its mission, a MPS may need to
change its configuration over time, to adopt the most
suitable one with respect to the performance and de-
pendability requirements of the phase being currently
executed, or simply to be more resilient to an hazardous
external environment.
(5) The successful completion of a phase, as well as the ac-
tivities performed therein, may bring a different benefit
to the MPS with respect to that obtained with other
phases.
Many examples of MPS can be found in various appli-
cation domains. For instance, systems for the aided-guide
of aircraft, whose mission-time is divided into several
phases such as take-off, cruise, landing, with completely
different requirements. A very important sub-class of MPS
is represented by the so-called Scheduled Maintenance
Systems encountered in almost all the application domains
where an artefact is to be used for long time and is periodi-
cally subject to maintenance actions. An SMS is easily
formulated as a MPS considering that the system is run for
a number of operational phases, and then undergoes a
maintenance phase.
This paper describes DEEM (DEpendability
Evaluation of Multiple-phased systems), the dependability
modeling and evaluation tool specifically tailored for MPS,
being currently developed by the University of Florence
and CNUCE-CNR. DEEM supports the methodology pro-
posed in [10] for the dependability modeling and evalua-
tion of MPS. This methodology relies upon Deterministic
and Stochastic Petri Nets (DSPN) as a modeling tool and
on Markov Regenerative Processes (MRGP) for the model
solution. Due to their high expressiveness, DSPN models
are able to cope with the dynamic structure of MPS, and al-
low defining very concise models. DEEM models are
solved with a very simple and computationally efficient an-
alytical solution technique based on the separation of the
MRGP underlying the DSPN of a MPS.
The paper is organized as follows. Section 2 describes
the modeling features of DEEM and its Graphical User
Interface, giving an overview of our DSPN approach.
Section 3 describes the specialized solution algorithm im-
plemented by DEEM, highlighting the advantages over
previous general MRGP solutions. Then, Section 4 de-
scribes how DEEM works. Finally, our concluding remarks
are given in Section 5, where we also discuss some possible
extensions of the DSPN modeling methodology and the
issues related to their inclusion in the DEEM solution tech-
nique.
2  The DEEM approach to model MPS
DEEM employs the DSPN formalism [1] for the
modeling of MPS. DSPN models extend Generalized
Stochastic Petri Nets and Stochastic Reward Nets, allowing
for the exact modeling of events having deterministic oc-
currence times. A DEEM model may include immediate
transitions, represented by a thin line, transitions with ex-
ponentially distributed firing times, represented by empty
rectangles, and transitions with deterministic firing times,
represented by filled rectangles.
Besides the introduction of deterministic transitions,
DEEM makes available a set of modeling features that sig-
nificantly improve DSPN expressiveness:
- firing rates of timed transitions may specified through
arbitrary functions of the marking;
- arbitrary functions of the marking may be employed to
include additional enabling conditions, named guards,
to the specification of the transitions;
- rewards can be defined as arbitrary functions of the
model marking;
- arc cardinalities may be expressed through marking-de-
pendent functions.
This rich set of modeling features, accessible through
a Graphical User Interface, provides DEEM with a general
modeling scheme in which two logically separate parts are
used to represent MPS models. One is the System Net
(SN), which represents the failure/repair behavior of sys-
tem components, and the other is the Phase Net (PhN),
which represents the execution of the various phases, as de-
scribed in Figure 1.
Figure 1:  DEEM Interface and the DSPN model of the MPS in [10]
SN contains only exponentially distributed and im-
mediate transitions, whereas the PhN contains all the de-
terministic transitions of the overall DSPN model and may
as well contain immediate transitions. A token in a place of
the PhN model represents a phase being executed, and the
firing of a deterministic transition models a phase change.
Figure 2: Property windows associated to
Transition t1
Figure 3: Property windows associated to
TransitionSO1-yes
Figure 4: DEEM Interface and the DSPN model of the MPS in [5]
Each net is made dependent on the other one by mark-
ing-dependent predicates which modify transition rates, en-
abling conditions, reward rates, etc., to model the specific
MPS features. Marking dependent attributes of the various
objects (arcs, places and transitions) can be defined through
the DEEM property window associated to each object.
Figure 2 shows the window associated to transition T1 of
the SN of Figure 1, while Figure 3 shows that associated to
transition SO1-yes of the PhN.
Phase-triggered reconfigurations, which add a signifi-
cant complexity to the treatment of dependencies among
phases, are easily handled by DEEM through the implicit
mapping which is embedded in the model (as in [2; 4; 7;
12]). Any structure of the SN sub-model can be considered,
whereas the DSPN of the PhN must possess distinct mark-
ings corresponding to different phases. This limitation is
introduced because the DEEM solution algorithm focuses
on the time-dependent evolution of the MPS, and thus re-
quires to distinguish the sequence of phases performed dur-
ing the MPS history. DEEM is able to automatically recog-
nize MPS models that are amenable to analytical solution
from those that violate the required assumptions. The tran-
sient solution allows to evaluate the dependability related
measures at specific time instants, thus providing a means
to estimate the probability of successful mission comple-
tion, the relative impact of each single phase on the overall
dependability figures, etc.
Notice that the constraint on the PhN still allows for
quite general structures of the sub-model. In particular, the
PhN is not limited to have a linear structure, but it may take
a tree structure with a dynamic choice of the next phase to
perform (using enabling guards) to model a dynamic pro-
file of the mission. It may have a cyclic structure as well,
provided that the marking includes enough information to
distinguish phases performed within a cycle from those ex-
ecuted within another one, as exemplified in Figure 4.
3  The DEEM specialized analytical solution
DEEM provides a specific and efficient analytical so-
lution for MPS models. We briefly recall the background
mathematics and then describe the solution algorithm.
3.1 The analytical technique
The specialized solution finds its ground by observing
that the only deterministic transitions in a DSPN model of a
MPS are the phase duration, and that these transitions are
enabled one at the time. Thus, the marking process
M t t( ), ≥{ }0  of the DSPN is a Markov Regenerative
Process (MRGP) [6] for which the firing times of the de-
terministic transitions are indeed regeneration points.
Moreover, the following property holds of the DSPN model
of a MPS:
Property 1: in every non-absorbing marking of the
DSPN there is always one deterministic transition enabled,
which corresponds to the phase being currently executed.
The general solution method for MRGP processes
considers computing matrix V t( ) , whose entry 
  
r r
m m, '  is
the occupation probability of marking 
  
r
m'  at time t ≥ 0
given the initial marking 
  
r
m . Matrix V t( )  is the solution
to the generalized Markov renewal equation
V t E t K t V t( ) ( ) ( )* ( )= + , where K t( )  and E t( )
are the global and local kernel matrices [6] and ‘*’ is the
convolution operator. Instead of directly attacking the solu-
tion of the generalized Markov renewal equation by numer-
ical algorithms or Laplace-Stiltjes transform, DEEM com-
putes matrix V t( )  according to the following analytical
method, proposed in [10].
Let S  denote the state space of the MRGP process, let
  
1 2, , ,K n  be the set of phases the MPS can perform, and
finally let τi  denote the duration of phase i ,
  
i n= 1 2, , ,K . Consider the following subsets of S :
  
S m S i i ni = ∈ ={ }r K |  phase  is being performed,  1 2, , ,
  
S m Sn+ = ∈{ }1 r  |  no phase is being performed
Owing to Property 1, and because different phases
correspond to distinct markings of the DSPN model, sets
Si ,   i n= +1 2 1, , ,K , are a partition of the marking
space S . The stochastic process M t ti ( ), ≥{ }0 , de-
fined as the restriction of the MRGP within the execution
of phase i , is a continuous-time Markov chain with state
space Si ,   i n= 1 2, , ,K . Denote with Qi  the transition
rate matrix of M t ti ( ), ≥{ }0 ,   i n= 1 2, , ,K .  The
transient analysis of the MRGP is carried out by separately
considering the evolution of the processes
M t ti ( ), ≥{ }0 .
Consider the block structure that is induced on matrix
V t( )  as a result of the marking space partitioning. Each
block V ti j, ( )  is separately computed as follows. Consider
the unique path p i j( , )  that links phase i  to phase j  ac-
cording to the structure of the PhN. This path is a set of
phases 
  
p i j p p pr( , ) , ,,= { }1 2 K , with p i1 = , and
p jr = . Block V ti j, ( )  is given by:
V t e ei j
Q
p p
h
r Qph ph
h h
j
, ,
( ) = 

+
=
−
∏ τ δ∆ 1
1
1 (1)
where δ τ= −
=
−∑t phr h11 ,  and ∆p ph h, +1 ,
  
h r= −1 2 1, , ,K  is the branching probability matrix,
whose entry 
  
∆ r vm m
p ph h
, '
, +1
 is defined as the probability that
  
v
m'  is the initial marking of phase ph+1 , given that  
r
m  is
the marking at the end of phase ph .
3.2 The solution algorithm
Equation (1) allows to evaluate V t( )  through the
separate analysis of the various alternative paths which
compose the mission, and only requires the derivation of
matrix exponentials eQ ti , and branching probability ma-
trices ∆i j, , 
  
i j n, , , ,= 1 2 K , which can be automati-
cally obtained when the reachability graph is generated.
The solution of the DSPN model is thus reduced to the
cheaper problem of solving a set of homogeneous, time-
continuous smaller Markov chains.
To compute a block V ti j, ( )  and then the dependabil-
ity figures of the system, the solution engine of DEEM
takes as input the DSPN model and its initial probability
vector, and performs the following steps:
1) Builds RGP, the reachability graph of the PhN sub-
model. This graph has exactly one stable marking 
  
r
mi
for each phase i  the MPS may perform.
2) For each stable marking 
  
r
mi  in RGP, builds the reach-
ability graph RGS(
  
r
mi ) of the whole DSPN model
when marking 
  
r
mi  is the only one permitted for the
PhN. From RGS(
  
r
mi ) obtains the transition rate matrix
Qi  of the continuous-time Markov chain describing the
evolution of the DSPN during the execution of phase i .
3) For each pair of stable marking 
  
r
mi  and 
  
r
m j  in RGP,
such that marking 
  
r
m j  is reachable from 
  
r
mi  through
the single firing of some deterministic transition ti j
Det
,
,
builds the reachability graph RGS(
  
r
mi ,
  
r
m j ) of the
whole DSPN model, when the initial marking of the
PhN is 
  
r
mi , and transition ti j
Det
,
is the only one allowed
to fire. From RGS(
  
r
mi ,
  
r
m j ) obtains the branching
probability matrix ∆i j, for the transition from phase i
to phase j .
4) Multiplies the matrix exponentials and the branching
probability matrices, according to the order given by
Equation (1), to obtain matrix V ti j, ( ) .
5) Evaluates the specific dependability measure of interest
for the MPS from the initial probability vector and
V ti j, ( ) , according to the standard computation algo-
rithms.
4  DEEM at work
As already described in Section 2, DEEM possesses a
GUI inspired by [3] and realized using an X11 installation
with Motif runtime Libraries which the user employs to
define his model of a MPS. We remark that while building
the models, the attributes of the model objects, like rates or
probabilities, can be expressed through parameters rather
than numerical values directly. Therefore, prior to proceed
to the model evaluation (‘Transient Analysis’ in the
‘Compute’ Menu), the user has to assign values to the pa-
rameters. DEEM automatically builds a parameter table
collecting all the symbols defined in the model. This table
is made accessible through the command ‘Parameters’ in
the ‘Compute’ Menu, as described in Figure 5.
Figure 5: Parameters window with one study for
the example in Figure 1.
Many studies can be defined, each represented by a
column in the table. In each study one parameter is allowed
to take a range of values and another parameter to take a
set, this way a family of curves can be obtained by the
evaluation of a single study. The specific dependability
measure of interest for the MPS evaluation is defined
through the general mechanism of marking-dependent re-
ward functions (‘Set Reward Function’ in the ‘Compute
Menu’).
Then the evaluation can be launched (on the selected
study) and the algorithm described in Section 3 is exe-
cuted. Values are returned in a file which can be further
elaborated for producing plots or tables of the dependabil-
ity measures.
The main computational cost of the DEEM solution
algorithm is that required for the transient solutions and the
multiplications in step 4) of the algorithm sketched in the
previous section. Notice that the DEEM approach to gener-
ate the required matrices ever requires to handle the entire
state space of the MRGP process. Thus, DEEM is able to
deal with all the scenarios of MPS that have been analyti-
cally treated in the literature, at a cost which is comparable
with that of the cheapest ones [9; 11; 13], completely solv-
ing the issues posed by the phased-behavior of MPS.
It is worthwhile remarking the advantages DEEM of-
fers for the modeling and evaluation of MPS when com-
pared to general-purpose DSPN tools (such as
DSPNexpress 2.000 [8]). On the modeling side, the tool
GUI allows defining the PhN and SN sub-models to neatly
model the phase-dependent behaviors of MPS. On the
evaluation side, the specialized separate algorithm imple-
mented by DEEM results in a relevant reduction of the
MPS model solution time.
5  Concluding remarks
This paper focused on the description of DEEM, the
dependability modeling and evaluation tool specifically tai-
lored for Multiple Phased Systems, being currently devel-
oped by the University of Florence and CNUCE-CNR.
DEEM supports the methodology proposed in [10] for the
dependability modeling and evaluation of MPS. Modeling
is based on Deterministic and Stochastic Petri Nets, able to
cope with the dynamic structure of MPS, and on a set of
modeling features that significantly improve the expres-
siveness allowing for the definintion of very concise mod-
els. DEEM models are then solved with a very simple and
computationally efficient analytical solution technique
based on the separation of the MRGP underlying the DSPN
of a MPS. DEEM deals with all the scenarios of MPS that
have been analytically treated in the literature, at a cost that
is comparable with the cheapest ones, completely solving
the issues posed by the phased-behavior of MPS.
We intend to extend DEEM capabilities for analyzing
a wider class of Systems. The first step will consist in mov-
ing from DSPN to Markov Regenerative Stochastic Petri
Net (MRSPN). MRSPN models, characterized by having a
Markov Regenerative Process as their underlying stochas-
tic marking process, allow the tractability of MPS having
random (instead of constant) phase duration. The modeling
of non-exponential intra-phase activities will be the next
step. To deal efficiently with intra-phase models other than
time-homogeneous Markov chains, we are developing a
specialization of the Markov Regenerative Process
(MRGP) theory driven by the peculiar characteristics of
MPS.
DEEM will be made available soon to the academic
world, for information see http://bonda.cnuce.cnr.it.
References
</body>
</CSXAPIMetadata>